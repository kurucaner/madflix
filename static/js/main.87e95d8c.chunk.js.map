{"version":3,"sources":["images/madflix.jpeg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","images/search-icon.svg","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","inital","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","target","value","button","Button","callback","onClick","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","release_date","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87e95d8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/madflix.29fbcb50.jpeg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n  height: 80px;\n`;\n\nexport const LogoImg = styled.img`\n  width: 130px;\n  height: 80px;\n\n  @media screen and (max-width: 400px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport RMDBLogo from \"../../images/madflix.jpeg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/madflix\"><LogoImg src={RMDBLogo} alt=\"rmdb-logo\" /></Link>\n      \n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb_logo\" />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n\n\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"9b9db796275919f97fb742c582ab0008\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\n\nconst HeroImage = ({ image, title, text }) => (\n  <Wrapper image={image}>\n    <Content>\n      <Text>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from \"react\";\nimport { Wrapper, Content } from \"./Grid.styles\";\n\nconst Grid = ({ header, children }) => (\n  <Wrapper>\n    <h1>{header}</h1>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Image } from \"./Thumb.styles\";\nimport { Link } from \"react-router-dom\";\n\nconst Thumb = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <Image src={image} alt='movie-thumb' />\n      </Link>\n    ) : (\n      <Image src={image} alt='movie-thumb' />\n    )}\n  </div>\n);\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default Thumb;\n","import { Spinner } from \"./Spinner.styles\"\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: var(--fontBig);\n    position: absolute;\n    left: 0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport { Wrapper, Content } from \"./SearchBar.styles\";\nimport searchIcon from \"../../images/search-icon.svg\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  function handleSearch(event) {\n    setState(event.target.value);\n  }\n  const inital = useRef(true);\n  \n\n  useEffect(() => {\n      if(inital.current){\n          inital.current = false;\n          return;\n      }\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={handleSearch}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n} from \"./config\";\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async (movieId) => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async (movieId) => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n};\n\nexport default apiSettings;\n","import { useState, useEffect } from \"react\";\n// API\nimport API from \"../API\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false)\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n// Components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from \"./Thumb\";\nimport Spinner from \"./Spinner\";\nimport SearchBar from \"./SearchBar\";\nimport Button from \"./Button\";\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\n    useHomeFetch();\n\n  if (error) return <div>Something went wrong...</div>\n  return (\n    <>\n      {state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Results\" : \"Upcoming Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)}/>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .date {\n    margin: 0 0 0 40px;\n\n    p{\n      margin-left: -14px;\n    }\n\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Components\nimport Thumb from \"../Thumb\";\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\n// Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n      />\n      <Text>\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className=\"rating-directors\">\n          <div>\n            <h3>RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\n            {movie.directors.map((director) => (\n              <p key={director.credit_id}>{director.name}</p>\n            ))}\n          </div>\n          <div>\n            <h3>RELEASE DATE</h3>\n            <div className=\"date\">\n              <p>{movie.release_date}</p>\n            </div>\n          </div>\n        </div>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Helpers\nimport { calcTime, convertMoney } from '../../helpers';\n// Styles\nimport { Wrapper, Content } from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className='column'>\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className='column'>\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className='column'>\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport { Wrapper, Image } from './Actor.styles';\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt='actor-thumb' />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n}\n\nexport default Actor;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n// Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n  \n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header='Actors'>\n        {movie.actors.map(actor => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\n\nexport const useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(\n          (member) => member.job === \"Director\"\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors,\n        });\n\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n  return { state, loading, error };\n};\n","import React from \"react\";\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    \n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// Components\nimport Header from \"../src/components/Header\";\nimport Home from \"../src/components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n// Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/madflix\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}